MyBatis(Google) (구 iBatis : Apache Project)
1.기본 설정 : xml 기반 - 마이바티스 프레임워크 사용을 위한 환경 설정
2.매퍼 설정 : xml 기반 - SQL 문 작성, Java 쪽에서 실행할 SQL 문을 매핑
3.DAO 측에서 동작

DTD (xml 문서의 구조를 정의하는데 사용되는 규칙 집합)

MyBatis XML 사용을 위한 라이브러리 준비
 1. google 에서 검색 : mybatis editor google code
   (https://code.google.com/archive/a/eclipselabs.org/p/mybatiseditor)
 2. Downloads
   - 첫 번째 항목 : org.eclipselabs.mybatisdeitor.ui_1.1.0.201207062137.jar
 3.STS or Eclipse 디렉터리에 있는 plugins 에 가져다 두고 재시작

(mybatis google code editor 웹페이지(사진참조)에서 org.eclipselabs.mybatiseditor.ui_1.1.0.201207062137.jar 다운 받아서
D:\dev_lec\tools\sts-bundle\sts-3.9.18.RELEASE\plugins 경로에 복사해서 넣어두기
그 이후에 root-context.xml에서 코드를 작성한다.)

MyBatis 동작
  1. sqlSessionFactoryBuilder (스프링에서는 생성하지 않음)
    mtbatis-config.xml 참조 (프로젝트에 1개만 존재)
      DB 접속 정보
      매퍼 경로 정보
  	
  2. sqlSessionFactory (SqlSessionFactoryBean)
    mapper.xml 참조 (패키지 단위로 여러 개 존재, 테이블 당 존재)
    -패키지가 여러개 존재하기에 빌드업할 때 property 태그 안에서
     "mapperLacations"라고 적는다.
     SQL 문 포함
      -인자값, 반환값에 대한 설정이 들어감
    
  3. sqlSession (SqlSessionTemplate)
    매퍼의 SQL문을 실행하는 Java 객체
      - insert(), update(), delete(), selectList(), selectOne()  
    생성자 주입만 가능함

Spring 디펜던시 (MVN 레파지토리에서 링크 복사 받아옴, pom.xml에 추가함)
  MyBatis 3.5.16
  MyBatis Spring 2.1.2
  Spring JDBC 5.3.6 (Springframework-version과 동일)
  HikariCP 5.0.1 : Connection Pool 라이브러리 (Connection을 미리 만들어 두는 것)
    -Java Connection Pool API : javax.sql.DataSource
    -Hikari Connection Pool API : com.zaxxer.hikari.HikariDataSource ( root-context.xml에 작성)

 